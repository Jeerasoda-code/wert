--Modulo-18 Counter with Synchronous Reset :0 to 9 (0000 to 1001)
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std=logic_unsigned.all;

entity counter is
port (CLK: in std_logic;
RST: in std_logic; --Synchronous reset input RST active high
Q: out std_logic_vector(3 downto 0));
end counter;

architecture counter_arch of counter is
signal TEMP_Q: std_logic_vector(3 downto 0);
begin
process(CLK)
begin
  if rising_edge(CLK) then --if clk'event and clk= '1' then 
    if RST ='1' then --active high and it is inside clock therfore its
synchronous reset
      TEMP_Q <= (others => '0'); --TEMP_Q <= "0000"
else
if (TEMP_Q= "1001") then
  TEMP_Q <= (others => '0'); --TEMP_Q <= "0000"
else
TEMP_Q <= TEMP_Q+ 1; --up counting
end if;
end if;
end if;
end process;
Q <= TEMP_Q;
end counter_arch;
